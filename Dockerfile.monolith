# ============= MONOLITH DEPLOYMENT DOCKERFILE =============
# Build the complete application with all modules

FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./
COPY vite.config.ts ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./
COPY components.json ./

# Install all dependencies including devDependencies for building
RUN npm ci

# Copy source code
COPY server ./server
COPY client ./client
COPY shared ./shared

# Build frontend and backend
RUN npm run build

# ============= PRODUCTION STAGE =============

FROM node:20-alpine AS production

WORKDIR /app

# Install production dependencies only
COPY package*.json ./
RUN npm ci --omit=dev && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/client/dist ./client/dist

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodeuser -u 1001

# Set ownership
RUN chown -R nodeuser:nodejs /app
USER nodeuser

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "fetch('http://localhost:5000/api/health').then(() => process.exit(0)).catch(() => process.exit(1))"

# Start the application
CMD ["node", "dist/index.js"]